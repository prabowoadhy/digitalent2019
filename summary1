>>> x = 1
>>> y=2
>>> x,y,z=x,x,y
>>> z,y,z=x,y,z
>>> print(x,y,z)
1 1 2

>>> x=3
>>> y=2
>>> x=x%y
>>> x=x%y
>>> y=y%x
>>> print(y)
0

>>> list=[x*x for x in range(5)]
>>> def fun(lst):
	del lst[lst[2]}
	
SyntaxError: invalid syntax

>>> def fun(lst):
	del lst[lst[2]]
	return lst
print(fun(list))
SyntaxError: invalid syntax

>>> def fun(lst):
	del lst[lst[2]]
	return lst
print(fun(list))
SyntaxError: invalid syntax

>>> def fun(lst):
	del lst[lst[2]]
	return lst

>>> print(fun(list))
[0, 1, 4, 9]

>>> print("a","b","c",sep="sep")
asepbsepc

>>> print(1//2)
0

>>> print(1//5+1/5)
0.2

>>> nums=[1,2,3]
>>> vals = nums
>>> del vals[:]
>>> print(vals)
[]

>>> z=0
>>> y=10
>>> x=y<z and z>y or y>z and z<y
>>> print(x)
True

>>> def func(a,b):
	return b ** a

>>> print(func(b=2,2))
SyntaxError: positional argument follows keyword argument

>>> lst = [i for i in range(-1,-2)]
>>> print(lst)
[]

>>> a=1
>>> b=0
>>> a=a^b
>>> a=a^b
>>> a=1
>>> b=0
>>> a=a^b
>>> b=a^b
>>> a=a^b
>>> print(a,b)
0 1

>>> IN = 1
>>> in=1
SyntaxError: invalid syntax

>>> in_ = 1
>>> tup = (1,2,4,8)
>>> tup = tup[-2:-1)
SyntaxError: invalid syntax

>>> tup = tup[-2:-1]
>>> tup = tup[-1]
>>> print(tup)
4

>>> def func1(a):
	return None

>>> def func2(a):
	return func1(a)*func1(a)

>>> print(func2(2))
Traceback (most recent call last):
  File "<pyshell#69>", line 1, in <module>
    print(func2(2))
  File "<pyshell#68>", line 2, in func2
    return func1(a)*func1(a)
TypeError: unsupported operand type(s) for *: 'NoneType' and 'NoneType'

>>> print(2%2)
0

>>> print(1%2)
1

>>> def fun(x,y):
	if x==y:
		return x
	else:
		return fun(x,y-1)

	
>>> print(fun(0,3))
0

>>> lst = [[x for x in range(3)] for y in range(3)]
>>> for r in range(3):
	for c in range(3):
		if lst[r][c]%2!=0:
			print("#")

			
#
#
#
>>> dd = {"1":"0","0":"1"}
>>> for x in dd.vals():
	print(x,end="")

	
Traceback (most recent call last):
  File "<pyshell#88>", line 1, in <module>
    for x in dd.vals():
AttributeError: 'dict' object has no attribute 'vals'
